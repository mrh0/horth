func leap buf<char> int -> buf<char> in
    let b i in
    b as! int i + as! buf<char> ret
end

func writeLength buf<char> int -> buf<char> in
    let b v in
    b as! buf<int> v write
    b 8 leap ret
end

inline func putChar buf<char> char -> buf<char> in
    let b c in
    b c write
    b next ret
end

inline func putChar buf<char> int -> buf<char> in
    as char putChar ret
end

func concat string string -> string in
    let a b in
    a .length b .length + 8 +
    let len in
    len new buf<char>
    len writeLength
    let buf in
    a .length, a .data@, buf
    copy
    //b .length, b .data@, buf a .length leap
    //copy


    buf as! string ret
end

start func main -> int in
    "Hello" "World" concat log
    0 ret
end